[gd_resource type="VisualShader" load_steps=69 format=3 uid="uid://bk6y1suvexf4t"]

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_gn0pl"]
expanded_output_ports = [0]
texture_type = 1

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_ncdtv"]
expanded_output_ports = [0]
parameter_name = "DiffuseColor"
default_value_enabled = true

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_fh5uq"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(0, 0, 0, 0)]
op_type = 2
operator = 2

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_26avs"]
source = 5

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_fgbq3"]
input_name = "uv"

[sub_resource type="VisualShaderNodeVec3Parameter" id="VisualShaderNodeVec3Parameter_lt4e7"]
parameter_name = "NormalUVSize"
default_value_enabled = true
default_value = Vector3(1, 1, 1)

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_mde7s"]
operator = 2

[sub_resource type="VisualShaderNodeGlobalExpression" id="VisualShaderNodeGlobalExpression_qyt5a"]
size = Vector2(505.328, 274.55)
expression = "uniform sampler2D environment_texture;
uniform float M_PI = 3.14159265359;

vec4 texturePanorama(vec3 normal, sampler2D pano) {
	vec2 st = vec2(
			atan(normal.x, normal.z),
			acos(normal.y));

	if (st.x < 0.0)
		st.x += M_PI * 2.0;

	st /= vec2(M_PI * 2.0, M_PI);

	return textureLod(pano, st, 0.0);
}
"

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_pbxlj"]
parameter_name = "Reflectivness"
hint = 1
default_value_enabled = true

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_3q0d3"]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_6clob"]

[sub_resource type="VisualShaderNodeVaryingSetter" id="VisualShaderNodeVaryingSetter_5iupu"]
varying_name = "Reflection"
varying_type = 4

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_hpct1"]
default_input_values = [0, 0.0, 1, 2.0]
operator = 3

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_mtp8n"]
parameter_name = "NormalMap"
texture_type = 2

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_d7u8n"]
size = Vector2(615.725, 185.101)
expression = "vec3 normal = (INV_VIEW_MATRIX*vec4(VAR2,0)).xyz * vec3(1, -1, 1);
envioment = texturePanorama(normal, environment_texture).xyz;"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_4vh78"]
input_name = "binormal"

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_hloyj"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(1, 1, 1)]
op_type = 3

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_squhx"]
size = Vector2(250, 150)
expression = "color = AmbientColor;"

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_6a74m"]
parameter_name = "Fogginess"
hint = 1
default_value_enabled = true

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_nirto"]
input_name = "light_color"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_vaco5"]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_qftuk"]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_8op2o"]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_nho8a"]
operator = 2

[sub_resource type="VisualShaderNodeVectorFunc" id="VisualShaderNodeVectorFunc_x3vyg"]

[sub_resource type="VisualShaderNodeVectorFunc" id="VisualShaderNodeVectorFunc_yj8rq"]

[sub_resource type="VisualShaderNodeVectorFunc" id="VisualShaderNodeVectorFunc_jjwv7"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_1cvos"]
input_name = "light"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_h4h3r"]
operator = 2

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_fuwm2"]
default_input_values = [0, 0.0, 1, 2.0]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_tvrr5"]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_i20u7"]
operator = 1

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_jtnly"]
input_name = "view"

[sub_resource type="VisualShaderNodeDotProduct" id="VisualShaderNodeDotProduct_c6m7e"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_krylq"]
input_name = "normal"

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_wo707"]
default_input_values = [0, 0.0, 1, 2.0]
operator = 5

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_o4rpl"]
operator = 2

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_avbr6"]
input_name = "light_color"

[sub_resource type="VisualShaderNodeCompare" id="VisualShaderNodeCompare_vhbne"]
function = 2

[sub_resource type="VisualShaderNodeVectorFunc" id="VisualShaderNodeVectorFunc_a2a2n"]

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_ncsq8"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_0xx6n"]
input_name = "normal"

[sub_resource type="VisualShaderNodeDotProduct" id="VisualShaderNodeDotProduct_fbv5k"]

[sub_resource type="VisualShaderNodeVectorFunc" id="VisualShaderNodeVectorFunc_4hpq0"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_1sr8m"]
input_name = "light"

[sub_resource type="VisualShaderNodeVectorFunc" id="VisualShaderNodeVectorFunc_i7b8m"]

[sub_resource type="VisualShaderNodeVectorFunc" id="VisualShaderNodeVectorFunc_xxvc8"]

[sub_resource type="VisualShaderNodeVectorFunc" id="VisualShaderNodeVectorFunc_vomda"]

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_iexlg"]
operator = 2

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_b0sdt"]
operator = 2

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_0ocwf"]
default_input_values = [0, 0.0, 1, 5.0]
operator = 2

[sub_resource type="VisualShaderNodeCompare" id="VisualShaderNodeCompare_qc47k"]
function = 2

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_ieog0"]
operator = 2

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_h4kve"]
parameter_name = "AmbientIntensity"
default_value_enabled = true
default_value = 1.0

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_cxvyh"]
parameter_name = "DiffuseIntensity"
default_value_enabled = true
default_value = 1.0

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_c78l5"]
parameter_name = "SpecIntensity"
default_value_enabled = true
default_value = 1.0

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_luicy"]
parameter_name = "Shininess"
default_value_enabled = true
default_value = 2.0

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_e0yyf"]

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_xe6x4"]
parameter_name = "SpecularStrength"
default_value_enabled = true
default_value = 2.0

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_jblpp"]
parameter_name = "AmbientColor"
default_value_enabled = true
default_value = Color(0.165656, 0.165656, 0.165656, 1)

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_6tv2p"]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_uwxwr"]

[sub_resource type="VisualShaderNodeVaryingGetter" id="VisualShaderNodeVaryingGetter_kl773"]
varying_name = "Reflection"
varying_type = 4

[sub_resource type="VisualShaderNodeParameterRef" id="VisualShaderNodeParameterRef_4u2y3"]
parameter_name = "Reflectivness"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_87olm"]
input_name = "diffuse"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_oqelm"]

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_fxy8m"]
size = Vector2(1225.07, 455.933)
expression = "vec4 vertexW = MODEL_MATRIX * vec4(VERTEX,1.); //vertex from model to world space
vec3 N = normalize(MODEL_MATRIX * vec4(NORMAL.x, NORMAL.y, NORMAL.z, 0.0)).xyz; //normal from model space to world space

vec3 I = normalize(vertexW.xyz); //incident vector (from camera to vertex)
vec3 R = reflect(I, N); //reflection vector (from vertex to cube map)
R.z *= -1.;
VAR2.xyz = R;
"

[sub_resource type="VisualShaderNodeVaryingSetter" id="VisualShaderNodeVaryingSetter_md8t3"]
varying_name = "VAR2"
varying_type = 4

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_disabled, ambient_light_disabled;

uniform float Reflectivness : hint_range(0, 1) = 0;

// Varyings
varying vec3 Reflection;
varying vec3 VAR2;
varying vec3 worldSpaceNormal;

uniform sampler2D tex_frg_14 : source_color;
uniform vec4 DiffuseColor : source_color = vec4(1.000000, 1.000000, 1.000000, 1.000000);
uniform float Fogginess : hint_range(0, 1) = 0;
uniform vec3 NormalUVSize = vec3(1.000000, 1.000000, 1.000000);
uniform sampler2D NormalMap : hint_normal;
uniform float DiffuseIntensity = 1;
uniform vec4 AmbientColor : source_color = vec4(0.165656, 0.165656, 0.165656, 1.000000);
uniform float AmbientIntensity = 1;
uniform float SpecIntensity = 1;
uniform float Shininess = 2;
uniform float SpecularStrength = 2;


// GlobalExpression:0
	uniform sampler2D environment_texture;
	uniform float M_PI = 3.14159265359;
	
	vec4 texturePanorama(vec3 normal, sampler2D pano) {
		vec2 st = vec2(
				atan(normal.x, normal.z),
				acos(normal.y));
	
		if (st.x < 0.0)
			st.x += M_PI * 2.0;
	
		st /= vec2(M_PI * 2.0, M_PI);
	
		return textureLod(pano, st, 0.0);
	}
	

void vertex() {
	vec3 n_out15p0;
// Expression:15
	n_out15p0 = vec3(0.0, 0.0, 0.0);
	{
		vec4 vertexW = MODEL_MATRIX * vec4(VERTEX,1.); //vertex from model to world space
		vec3 N = normalize(MODEL_MATRIX * vec4(NORMAL.x, NORMAL.y, NORMAL.z, 0.0)).xyz; //normal from model space to world space
		
		vec3 I = normalize(vertexW.xyz); //incident vector (from camera to vertex)
		vec3 R = reflect(I, N); //reflection vector (from vertex to cube map)
		R.z *= -1.;
		n_out15p0.xyz = R;
		
	}


// VaryingSetter:16
	VAR2 = n_out15p0;


}

void fragment() {
// Texture2D:14
	vec4 n_out14p0 = texture(tex_frg_14, UV);


// ColorParameter:15
	vec4 n_out15p0 = DiffuseColor;


// VectorOp:16
	vec4 n_out16p0 = n_out14p0 * n_out15p0;


// FloatParameter:28
	float n_out28p0 = Reflectivness;


// FloatOp:32
	float n_in32p1 = 2.00000;
	float n_out32p0 = n_out28p0 / n_in32p1;


	vec3 n_out36p0;
// Expression:36
	n_out36p0 = vec3(0.0, 0.0, 0.0);
	{
		vec3 normal = (INV_VIEW_MATRIX*vec4(VAR2,0)).xyz * vec3(1, -1, 1);
		n_out36p0 = texturePanorama(normal, environment_texture).xyz;
	}


// VectorOp:29
	vec3 n_out29p0 = vec3(n_out32p0) * n_out36p0;


// VectorOp:30
	vec3 n_out30p0 = vec3(n_out16p0.xyz) + n_out29p0;


	vec4 n_out43p0;
// Expression:43
	n_out43p0 = vec4(0.0, 0.0, 0.0, 0.0);
	{
		n_out43p0 = AmbientColor;
	}


// FloatParameter:44
	float n_out44p0 = Fogginess;


// Mix:42
	vec3 n_out42p0 = mix(n_out30p0, vec3(n_out43p0.xyz), vec3(n_out44p0));


// Input:18
	vec2 n_out18p0 = UV;


// Vector3Parameter:19
	vec3 n_out19p0 = NormalUVSize;


// VectorOp:20
	vec3 n_out20p0 = vec3(n_out18p0, 0.0) * n_out19p0;


	vec4 n_out17p0;
// Texture2D:17
	n_out17p0 = texture(NormalMap, vec2(n_out20p0.xy));


// Output:0
	ALBEDO = n_out42p0;
	NORMAL_MAP = vec3(n_out17p0.xyz);


// VaryingSetter:31
	Reflection = n_out36p0;


	worldSpaceNormal = vec3(0.0);
}

void light() {
// Input:3
	vec3 n_out3p0 = NORMAL;


// VectorFunc:19
	vec3 n_out19p0 = normalize(n_out3p0);


// Input:2
	vec3 n_out2p0 = LIGHT;


// VectorFunc:18
	vec3 n_out18p0 = normalize(n_out2p0);


// DotProduct:4
	float n_out4p0 = dot(n_out19p0, n_out18p0);


// Compare:48
	float n_in48p1 = 0.00000;
	bool n_out48p0 = n_out4p0 > n_in48p1;


// FloatOp:49
	float n_out49p0 = (n_out48p0 ? 1.0 : 0.0) * n_out4p0;


// FloatParameter:51
	float n_out51p0 = DiffuseIntensity;


// Input:11
	vec3 n_out11p0 = LIGHT_COLOR;


// VectorFunc:17
	vec3 n_out17p0 = normalize(n_out11p0);


// VectorOp:14
	vec3 n_out14p0 = vec3(n_out51p0) * n_out17p0;


// VectorOp:15
	vec3 n_out15p0 = vec3(n_out49p0) * n_out14p0;


// ColorParameter:56
	vec4 n_out56p0 = AmbientColor;


// FloatParameter:50
	float n_out50p0 = AmbientIntensity;


// VectorOp:16
	vec3 n_out16p0 = vec3(n_out56p0.xyz) * vec3(n_out50p0);


// VectorOp:13
	vec3 n_out13p0 = n_out15p0 + n_out16p0;


// FloatParameter:52
	float n_out52p0 = SpecIntensity;


// Input:39
	vec3 n_out39p0 = NORMAL;


// VectorFunc:40
	vec3 n_out40p0 = normalize(n_out39p0);


// FloatOp:25
	float n_in25p1 = 2.00000;
	float n_out25p0 = n_out4p0 * n_in25p1;


// VectorOp:26
	vec3 n_out26p0 = n_out40p0 * vec3(n_out25p0);


// Input:41
	vec3 n_out41p0 = LIGHT;


// VectorFunc:42
	vec3 n_out42p0 = normalize(n_out41p0);


// VectorOp:27
	vec3 n_out27p0 = n_out26p0 - n_out42p0;


// VectorFunc:44
	vec3 n_out44p0 = normalize(n_out27p0);


// Input:28
	vec3 n_out28p0 = VIEW;


// VectorFunc:37
	vec3 n_out37p0 = normalize(n_out28p0);


// DotProduct:29
	float n_out29p0 = dot(n_out44p0, n_out37p0);


// Compare:34
	float n_in34p1 = 0.00000;
	bool n_out34p0 = n_out29p0 > n_in34p1;


// FloatOp:45
	float n_out45p0 = (n_out34p0 ? 1.0 : 0.0) * n_out29p0;


// FloatOp:46
	float n_out46p0 = n_out45p0 * (n_out48p0 ? 1.0 : 0.0);


// FloatParameter:53
	float n_out53p0 = Shininess;


// FloatOp:30
	float n_out30p0 = pow(n_out46p0, n_out53p0);


// FloatParameter:55
	float n_out55p0 = SpecularStrength;


// FloatOp:47
	float n_out47p0 = n_out30p0 * n_out55p0;


// FloatOp:31
	float n_out31p0 = n_out52p0 * n_out47p0;


// Input:33
	vec3 n_out33p0 = LIGHT_COLOR;


// VectorFunc:43
	vec3 n_out43p0 = normalize(n_out33p0);


// VectorOp:21
	vec3 n_out21p0 = vec3(n_out31p0) * n_out43p0;


// VectorOp:38
	vec3 n_out38p0 = n_out13p0 + n_out21p0;


// ParameterRef:61
	float n_out61p0 = Reflectivness;


// VaryingGetter:60
	vec3 n_out60p0 = Reflection;


// VectorOp:57
	vec3 n_out57p0 = vec3(n_out61p0) * n_out60p0;


// VectorOp:59
	vec3 n_out59p0 = n_out38p0 + n_out57p0;


// Input:62
	vec3 n_out62p0 = DIFFUSE_LIGHT;


// VectorOp:63
	vec3 n_out63p0 = n_out59p0 + n_out62p0;


// Output:0
	DIFFUSE_LIGHT = n_out63p0;


}
"
modes/specular = 2
flags/ambient_light_disabled = true
varyings/Reflection = "1,4"
varyings/VAR2 = "0,4"
varyings/worldSpaceNormal = "1,4"
nodes/vertex/15/node = SubResource("VisualShaderNodeExpression_fxy8m")
nodes/vertex/15/position = Vector2(-1440, -220)
nodes/vertex/15/size = Vector2(1225.07, 455.933)
nodes/vertex/15/input_ports = ""
nodes/vertex/15/output_ports = "0,4,VAR2;"
nodes/vertex/15/expression = "vec4 vertexW = MODEL_MATRIX * vec4(VERTEX,1.); //vertex from model to world space
vec3 N = normalize(MODEL_MATRIX * vec4(NORMAL.x, NORMAL.y, NORMAL.z, 0.0)).xyz; //normal from model space to world space

vec3 I = normalize(vertexW.xyz); //incident vector (from camera to vertex)
vec3 R = reflect(I, N); //reflection vector (from vertex to cube map)
R.z *= -1.;
VAR2.xyz = R;
"
nodes/vertex/16/node = SubResource("VisualShaderNodeVaryingSetter_md8t3")
nodes/vertex/16/position = Vector2(-60, -220)
nodes/vertex/connections = PackedInt32Array(15, 0, 16, 0)
nodes/fragment/0/position = Vector2(980, 100)
nodes/fragment/14/node = SubResource("VisualShaderNodeTexture_gn0pl")
nodes/fragment/14/position = Vector2(-700, 20)
nodes/fragment/15/node = SubResource("VisualShaderNodeColorParameter_ncdtv")
nodes/fragment/15/position = Vector2(-420, 220)
nodes/fragment/16/node = SubResource("VisualShaderNodeVectorOp_fh5uq")
nodes/fragment/16/position = Vector2(100, 120)
nodes/fragment/17/node = SubResource("VisualShaderNodeTexture_26avs")
nodes/fragment/17/position = Vector2(-260, 480)
nodes/fragment/18/node = SubResource("VisualShaderNodeInput_fgbq3")
nodes/fragment/18/position = Vector2(-920, 640)
nodes/fragment/19/node = SubResource("VisualShaderNodeVec3Parameter_lt4e7")
nodes/fragment/19/position = Vector2(-1000, 720)
nodes/fragment/20/node = SubResource("VisualShaderNodeVectorOp_mde7s")
nodes/fragment/20/position = Vector2(-540, 600)
nodes/fragment/21/node = SubResource("VisualShaderNodeGlobalExpression_qyt5a")
nodes/fragment/21/position = Vector2(-580, -520)
nodes/fragment/21/size = Vector2(505.328, 274.55)
nodes/fragment/21/input_ports = ""
nodes/fragment/21/output_ports = ""
nodes/fragment/21/expression = "uniform sampler2D environment_texture;
uniform float M_PI = 3.14159265359;

vec4 texturePanorama(vec3 normal, sampler2D pano) {
	vec2 st = vec2(
			atan(normal.x, normal.z),
			acos(normal.y));

	if (st.x < 0.0)
		st.x += M_PI * 2.0;

	st /= vec2(M_PI * 2.0, M_PI);

	return textureLod(pano, st, 0.0);
}
"
nodes/fragment/28/node = SubResource("VisualShaderNodeFloatParameter_pbxlj")
nodes/fragment/28/position = Vector2(340, -220)
nodes/fragment/29/node = SubResource("VisualShaderNodeVectorOp_3q0d3")
nodes/fragment/29/position = Vector2(980, -340)
nodes/fragment/30/node = SubResource("VisualShaderNodeVectorOp_6clob")
nodes/fragment/30/position = Vector2(420, 140)
nodes/fragment/31/node = SubResource("VisualShaderNodeVaryingSetter_5iupu")
nodes/fragment/31/position = Vector2(180, -240)
nodes/fragment/32/node = SubResource("VisualShaderNodeFloatOp_hpct1")
nodes/fragment/32/position = Vector2(800, -400)
nodes/fragment/35/node = SubResource("VisualShaderNodeTexture2DParameter_mtp8n")
nodes/fragment/35/position = Vector2(-620, 880)
nodes/fragment/36/node = SubResource("VisualShaderNodeExpression_d7u8n")
nodes/fragment/36/position = Vector2(-480, -200)
nodes/fragment/36/size = Vector2(615.725, 185.101)
nodes/fragment/36/input_ports = ""
nodes/fragment/36/output_ports = "0,4,envioment;"
nodes/fragment/36/expression = "vec3 normal = (INV_VIEW_MATRIX*vec4(VAR2,0)).xyz * vec3(1, -1, 1);
envioment = texturePanorama(normal, environment_texture).xyz;"
nodes/fragment/40/node = SubResource("VisualShaderNodeInput_4vh78")
nodes/fragment/40/position = Vector2(-1997.05, 156.828)
nodes/fragment/42/node = SubResource("VisualShaderNodeMix_hloyj")
nodes/fragment/42/position = Vector2(701.547, 116.225)
nodes/fragment/43/node = SubResource("VisualShaderNodeExpression_squhx")
nodes/fragment/43/position = Vector2(160, 280)
nodes/fragment/43/size = Vector2(250, 150)
nodes/fragment/43/input_ports = ""
nodes/fragment/43/output_ports = "0,5,color;"
nodes/fragment/43/expression = "color = AmbientColor;"
nodes/fragment/44/node = SubResource("VisualShaderNodeFloatParameter_6a74m")
nodes/fragment/44/position = Vector2(160, 440)
nodes/fragment/connections = PackedInt32Array(15, 0, 16, 1, 14, 0, 16, 0, 19, 0, 20, 1, 18, 0, 20, 0, 20, 0, 17, 0, 29, 0, 30, 1, 16, 0, 30, 0, 28, 0, 32, 0, 32, 0, 29, 0, 35, 0, 17, 2, 36, 0, 29, 1, 36, 0, 31, 0, 17, 0, 0, 9, 30, 0, 42, 0, 42, 0, 0, 0, 43, 0, 42, 1, 44, 0, 42, 2)
nodes/light/0/position = Vector2(3300, 900)
nodes/light/2/node = SubResource("VisualShaderNodeInput_1cvos")
nodes/light/2/position = Vector2(-1240, 580)
nodes/light/3/node = SubResource("VisualShaderNodeInput_krylq")
nodes/light/3/position = Vector2(-1260, 400)
nodes/light/4/node = SubResource("VisualShaderNodeDotProduct_fbv5k")
nodes/light/4/position = Vector2(-660, 620)
nodes/light/11/node = SubResource("VisualShaderNodeInput_nirto")
nodes/light/11/position = Vector2(-1260, 240)
nodes/light/13/node = SubResource("VisualShaderNodeVectorOp_vaco5")
nodes/light/13/position = Vector2(240, 560)
nodes/light/14/node = SubResource("VisualShaderNodeVectorOp_qftuk")
nodes/light/14/position = Vector2(-660, 980)
nodes/light/15/node = SubResource("VisualShaderNodeVectorOp_8op2o")
nodes/light/15/position = Vector2(20, 560)
nodes/light/16/node = SubResource("VisualShaderNodeVectorOp_nho8a")
nodes/light/16/position = Vector2(-840, 1700)
nodes/light/17/node = SubResource("VisualShaderNodeVectorFunc_x3vyg")
nodes/light/17/position = Vector2(-900, 1020)
nodes/light/18/node = SubResource("VisualShaderNodeVectorFunc_yj8rq")
nodes/light/18/position = Vector2(-900, 560)
nodes/light/19/node = SubResource("VisualShaderNodeVectorFunc_jjwv7")
nodes/light/19/position = Vector2(-720, 480)
nodes/light/21/node = SubResource("VisualShaderNodeVectorOp_h4h3r")
nodes/light/21/position = Vector2(2080, 780)
nodes/light/25/node = SubResource("VisualShaderNodeFloatOp_fuwm2")
nodes/light/25/position = Vector2(-440, 860)
nodes/light/26/node = SubResource("VisualShaderNodeVectorOp_tvrr5")
nodes/light/26/position = Vector2(-200, 820)
nodes/light/27/node = SubResource("VisualShaderNodeVectorOp_i20u7")
nodes/light/27/position = Vector2(20, 820)
nodes/light/28/node = SubResource("VisualShaderNodeInput_jtnly")
nodes/light/28/position = Vector2(-1260, 400)
nodes/light/29/node = SubResource("VisualShaderNodeDotProduct_c6m7e")
nodes/light/29/position = Vector2(480, 880)
nodes/light/30/node = SubResource("VisualShaderNodeFloatOp_wo707")
nodes/light/30/position = Vector2(1380, 840)
nodes/light/31/node = SubResource("VisualShaderNodeFloatOp_o4rpl")
nodes/light/31/position = Vector2(1820, 780)
nodes/light/33/node = SubResource("VisualShaderNodeInput_avbr6")
nodes/light/33/position = Vector2(-1260, 660)
nodes/light/34/node = SubResource("VisualShaderNodeCompare_vhbne")
nodes/light/34/position = Vector2(740, 740)
nodes/light/37/node = SubResource("VisualShaderNodeVectorFunc_a2a2n")
nodes/light/37/position = Vector2(-900, 340)
nodes/light/38/node = SubResource("VisualShaderNodeVectorOp_ncsq8")
nodes/light/38/position = Vector2(2300, 700)
nodes/light/39/node = SubResource("VisualShaderNodeInput_0xx6n")
nodes/light/39/position = Vector2(-1260, 840)
nodes/light/40/node = SubResource("VisualShaderNodeVectorFunc_4hpq0")
nodes/light/40/position = Vector2(-900, 780)
nodes/light/41/node = SubResource("VisualShaderNodeInput_1sr8m")
nodes/light/41/position = Vector2(-1260, 1280)
nodes/light/42/node = SubResource("VisualShaderNodeVectorFunc_i7b8m")
nodes/light/42/position = Vector2(-900, 1240)
nodes/light/43/node = SubResource("VisualShaderNodeVectorFunc_xxvc8")
nodes/light/43/position = Vector2(-900, 1460)
nodes/light/44/node = SubResource("VisualShaderNodeVectorFunc_vomda")
nodes/light/44/position = Vector2(240, 820)
nodes/light/45/node = SubResource("VisualShaderNodeFloatOp_iexlg")
nodes/light/45/position = Vector2(940, 840)
nodes/light/46/node = SubResource("VisualShaderNodeFloatOp_b0sdt")
nodes/light/46/position = Vector2(1160, 840)
nodes/light/47/node = SubResource("VisualShaderNodeFloatOp_0ocwf")
nodes/light/47/position = Vector2(1620, 840)
nodes/light/48/node = SubResource("VisualShaderNodeCompare_qc47k")
nodes/light/48/position = Vector2(-440, 660)
nodes/light/49/node = SubResource("VisualShaderNodeFloatOp_ieog0")
nodes/light/49/position = Vector2(-160, 500)
nodes/light/50/node = SubResource("VisualShaderNodeFloatParameter_h4kve")
nodes/light/50/position = Vector2(-1260, 1760)
nodes/light/51/node = SubResource("VisualShaderNodeFloatParameter_cxvyh")
nodes/light/51/position = Vector2(-1260, 2040)
nodes/light/52/node = SubResource("VisualShaderNodeFloatParameter_c78l5")
nodes/light/52/position = Vector2(-1260, 2340)
nodes/light/53/node = SubResource("VisualShaderNodeFloatParameter_luicy")
nodes/light/53/position = Vector2(-1260, 2640)
nodes/light/54/node = SubResource("VisualShaderNodeTexture_e0yyf")
nodes/light/54/position = Vector2(-1260, 2920)
nodes/light/55/node = SubResource("VisualShaderNodeFloatParameter_xe6x4")
nodes/light/55/position = Vector2(-1260, 3220)
nodes/light/56/node = SubResource("VisualShaderNodeColorParameter_jblpp")
nodes/light/56/position = Vector2(-1260, 3520)
nodes/light/57/node = SubResource("VisualShaderNodeVectorOp_6tv2p")
nodes/light/57/position = Vector2(-900, 3720)
nodes/light/59/node = SubResource("VisualShaderNodeVectorOp_uwxwr")
nodes/light/59/position = Vector2(2480, 740)
nodes/light/60/node = SubResource("VisualShaderNodeVaryingGetter_kl773")
nodes/light/60/position = Vector2(-1260, 3800)
nodes/light/61/node = SubResource("VisualShaderNodeParameterRef_4u2y3")
nodes/light/61/position = Vector2(-1260, 3980)
nodes/light/62/node = SubResource("VisualShaderNodeInput_87olm")
nodes/light/62/position = Vector2(2360, 1220)
nodes/light/63/node = SubResource("VisualShaderNodeVectorOp_oqelm")
nodes/light/63/position = Vector2(2847.52, 989.439)
nodes/light/connections = PackedInt32Array(14, 0, 15, 1, 11, 0, 17, 0, 17, 0, 14, 1, 2, 0, 18, 0, 3, 0, 19, 0, 18, 0, 4, 1, 25, 0, 26, 1, 26, 0, 27, 0, 28, 0, 37, 0, 37, 0, 29, 1, 29, 0, 34, 0, 39, 0, 40, 0, 40, 0, 26, 0, 41, 0, 42, 0, 42, 0, 27, 1, 33, 0, 43, 0, 43, 0, 21, 1, 27, 0, 44, 0, 44, 0, 29, 0, 29, 0, 45, 1, 34, 0, 45, 0, 45, 0, 46, 0, 30, 0, 47, 0, 47, 0, 31, 1, 48, 0, 49, 0, 48, 0, 46, 1, 50, 0, 16, 1, 51, 0, 14, 0, 52, 0, 31, 0, 53, 0, 30, 1, 55, 0, 47, 1, 56, 0, 16, 0, 19, 0, 4, 0, 60, 0, 57, 1, 61, 0, 57, 0, 46, 0, 30, 0, 16, 0, 13, 1, 4, 0, 49, 1, 4, 0, 48, 0, 4, 0, 25, 0, 49, 0, 15, 0, 31, 0, 21, 0, 38, 0, 59, 0, 62, 0, 63, 1, 63, 0, 0, 0, 13, 0, 38, 0, 59, 0, 63, 0, 57, 0, 59, 1, 21, 0, 38, 1, 15, 0, 13, 0)
